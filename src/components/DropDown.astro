---
interface Props {
  id: string;
  options: { value: string; label: string }[];
}

const { id, options } = Astro.props;
---

<div class="relative inline-block text-left w-max">
  <div>
    <button
      id={`${id}button`}
      type="button"
      class="inline-flex items-center justify-between w-full rounded-md border border-gray-300 shadow-xs px-4 py-2 bg-background text-sm font-medium text-text-HEADER focus:outline-hidden focus:ring-2 focus:ring-offset-2"
    >
      <span id="text-${id}" class="whitespace-nowrap text-center w-full"
        >select an option</span
      >
      <svg
        class="h-5 w-5"
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 20 20"
        fill="currentColor"
        aria-hidden="true"
      >
        <path
          fill-rule="evenodd"
          d="M5.23 7.21a.75.75 0 011.06 0L10 10.293l3.71-3.08a.75.75 0 111.04 1.08l-4.25 3.5a.75.75 0 01-1.04 0l-4.25-3.5a.75.75 0 010-1.08z"
          clip-rule="evenodd"></path>
      </svg>
    </button>
  </div>

  <div
    id={id}
    class="hidden absolute left-1/2 transform -translate-x-1/2 top-full z-10 border-2 focus:outline-hidden border-solid border-black mt-1 min-w-max rounded-md bg-background-overlay shadow-lg dropdown"
  >
    <div
      class="py-1"
      role="menu"
      aria-orientation="vertical"
      aria-labelledby={id}
    >
      {
        options.map((option) => (
          <button
            id={option.value}
            class="block w-full text-center px-4 py-2 text-sm text-text-SECONDARY focus:outline-hidden hover:bg-gray-700 whitespace-nowrap"
          >
            {option.label}
          </button>
        ))
      }
    </div>
  </div>
</div>
<script src="@src/utils/s.ts"></script>
